#+theme=optum
Clustering timeseries
Data Science and Engineering Club - Dublin
11 Aug 2018
Tags: optum, europython, python, 2018

Pietro Mascolo
@iz4vve
iz4vve@gmail.com

* The problem
.html code/html/spacer.html
.html code/html/math.html

- Lots of timeseries (200);
- Are there similar groups?;
- If so, what do they represent?

###############################################################

* EDA

.html code/html/spacer.html
.html code/html/spacer.html

.play code/data.py /START OMIT/,/END OMIT/

###############################################################

* What was tried

* Summary statistics

.image imgs/summary.png _ 500

.image imgs/summary_distributions.png 330 600

###############################################################

* PCA 1/2

Variance:
$$Var(A) = \frac{\left( (a_1 - \mu_A)^2 + ... + (a_n - \mu_A)^2 \right)}{n-1} $$

Covariance:

$$Cov(A, B) = \frac{\left( (a_1 - \mu_A)^2 + (b_1 - \mu_B)^2 + ... +  (a_n - \mu_A)^2 + (b_n - \mu_B)^2 \right)}{n-1}  $$

#: Mathematical representation to maximize variance
#: we need to determine how components vary with each other
#: so: covariance

* PCA 2/2
Let B be a `m`x`n` matrix whose `i-th` column is x(i) - Î¼.
We can define the covariance matrix as:

$$S = \frac{1}{n-1}BB^T$$

S is a symmetric matrix, therefore it can be othogonally diagonalized.

Let:

$$\lambda_1 \geq \lambda_2 \geq ... \geq \lambda_n \geq 0$$

be the set of eigenvalues of S, with {u(n)} as set of corresponding eigenvectors.


###############################################################

* Representation

.image imgs/pca.png _ 800

* Principal components composition

.image imgs/pc_components.png _ 800

* Statistics + PCA + KMeans

.image imgs/kmeans_pca _ 800


###############################################################


#: number of clusters obtained by examining silhouette coefficient

* Summary statistics + PCA: series

.image imgs/kmeans_pca_trends _ 800


###############################################################

* Seasonality

* Definition

A timeseries can be represented as the combination of three signals: Trend, Seasonality, and Residuals.

*Two*types*of*models*:

- Additive: $$Y(t) = Trend + Seasonality + Residuals$$
- Multiplicative: $$Y(t) = Trend \times Seasonality \times Residuals$$

* Seasonality analysis

.image imgs/seasonality _ 800

* Seasonality + PCA - PC composition

.image imgs/pca_Components.png _ 800


###############################################################


* Timeseries KMeans using DTW

.html code/html/spacer.html
.image imgs/dtw.jpg _ 750
.caption Euclidean distance vs. DTW


* Clustering results

.image imgs/clustering_kmeans_timeseries _ 800



* Density based algorithms on PC

.image imgs/dbscan _ 800

* Mixture models on PC

.image imgs/gmm _ 800



* What worked really well

* Fourier analysis

Periodic signals* can be represented as the sum of harmonics. 

$$S_N(t) = A_0 + \sum_{n=1}^{\infty} a_n \, \cos \left( \omega_n t\right) + \sum_{n=1}^{\infty} b_n \, \sin \left( \omega_n t\right) = \sum_{-\infty}^{\infty} c_ne^{j\omega_n t}$$

.image imgs/fourier.gif _ 350


* Spectrum of a signal

.image imgs/spectrum.gif _ 600

* Frequency domain analysis

.image imgs/spectra _ 800

* Hierarchical clustering

.image imgs/dendrogram _ 800

* A cluster

.image imgs/clusters_frequence _ 800


###############################################################
* Q/A
.image imgs/qa.png 500 _
